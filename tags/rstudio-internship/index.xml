<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rstudio-internship on Daniel Chen</title>
    <link>/tags/rstudio-internship/</link>
    <description>Recent content in rstudio-internship on Daniel Chen</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Daniel Chen {year}</copyright>
    <lastBuildDate>Wed, 29 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="/tags/rstudio-internship/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My time as an RStudio Intern</title>
      <link>/2020/01/29/my-time-as-an-rstudio-intern/</link>
      <pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/01/29/my-time-as-an-rstudio-intern/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I‚Äôve had a lot of time to think about my time as an RStudio intern.
When I do,
I usually end up with a few words in my head before I‚Äôm flooded with
(good) emotions and struggle with finding the words to convey my thoughts.
The last time I tried to write something like this went a little like
&lt;a href=&#34;https://software-carpentry.org/blog/2016/10/what_swc_means_to_me.html&#34;&gt;this&lt;/a&gt;.
What I can say is this:
whatever you thought it was like working at RStudio,
is (probably) true.&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;From a technical perspective,
the most jarring part of the work was transitioning from a user of the R language
to a developer.
I‚Äôve taught workshops and written R packages,
but nothing came close to the type of code I had to write for my internship.
I think my only saving grace was I was familiar enough with Git,
so I didn‚Äôt have to deal with
&lt;a href=&#34;https://daniel.rbind.io/2019/08/27/git-squash-and-merge-workflow/&#34;&gt;workflow&lt;/a&gt;
issues.&lt;/p&gt;
&lt;div id=&#34;the-project&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The project&lt;/h3&gt;
&lt;p&gt;I was on the
&lt;a href=&#34;https://education.rstudio.com/&#34;&gt;education team&lt;/a&gt;
and worked with worked with
&lt;a href=&#34;https://twitter.com/statgarrett&#34;&gt;Garrett Grolemund&lt;/a&gt;
and
&lt;a href=&#34;https://twitter.com/schloerke&#34;&gt;Barret Schloerke&lt;/a&gt;
(I can never spell their names properly without looking it up, and it didn‚Äôt help one of the other interns was
&lt;a href=&#34;https://twitter.com/malco_barrett&#34;&gt;Malcolm Barrett&lt;/a&gt;
)
on &lt;a href=&#34;https://github.com/rstudio-education/gradethis&#34;&gt;&lt;code&gt;gradethis&lt;/code&gt;&lt;/a&gt;.
The package tries to grade code in a
&lt;a href=&#34;https://rstudio.github.io/learnr/&#34;&gt;&lt;code&gt;learnr&lt;/code&gt; document&lt;/a&gt;,
but the real magic of the package isn‚Äôt just reporting a correct or incorrect answer,
it‚Äôs the ability to provide meaningful feedback to the learner.
For example, if the solution to a question was &lt;code&gt;sqrt(log(1))&lt;/code&gt; and the student provided &lt;code&gt;sqrt(log(2))&lt;/code&gt;,
it would report the answer as ‚Äúincorrect‚Äù but also return something along the lines of
‚ÄúI expected 1 where you wrote 2. Try it again; next time‚Äôs the charm!‚Äù.
Isn‚Äôt that way nicer than a giant red box telling you the answer is wrong?
Now if you think about it, isn‚Äôt this a really difficult problem to solve???
(Hint: yes.)&lt;/p&gt;
&lt;p&gt;Luckily, I didn‚Äôt have to write this package from scratch.
Garrett did write the initial working code base for me to improve,
but it also essentially meant working with legacy code and
learning new R programming paradigms at the same time.
‚ÄúR programming paradigms‚Äù what‚Äôs that? you might ask.
I mean
&lt;a href=&#34;https://adv-r.hadley.nz/expressions.html&#34;&gt;expressions&lt;/a&gt;,
&lt;a href=&#34;https://adv-r.hadley.nz/expressions.html&#34;&gt;rlang&lt;/a&gt;, and
&lt;a href=&#34;https://tidyeval.tidyverse.org/&#34;&gt;tidyeval&lt;/a&gt;
‚Ä¶ :x&lt;/p&gt;
&lt;p&gt;How does one go about leaning how all this works in the package?
Well‚Ä¶
by &lt;a href=&#34;https://github.com/rstudio-education/gradethis/pull/10&#34;&gt;merging a PR that breaks everything&lt;/a&gt;,
then trying to &lt;a href=&#34;https://github.com/rstudio-education/gradethis/issues/11&#34;&gt;understand an issue&lt;/a&gt;
that took &lt;a href=&#34;https://github.com/rstudio-education/gradethis/pull/21&#34;&gt;a month to fix&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I spent a better part of that month reading and not understanding &lt;a href=&#34;https://adv-r.hadley.nz/expressions.html&#34;&gt;expressions&lt;/a&gt;,
and pretty much being guided by a series of pair-programming sessions with Barret.
By ‚Äúguided‚Äù I mean he pretty much did the work I just typed characters and acted as a scribe.&lt;/p&gt;
&lt;p&gt;I‚Äôve done pair-programming with my own students,
but I never had anyone pair-program with me where I was the one learning.
There was so many new things going on during each session that I couldn‚Äôt retain every detail,
but things got easier towards the end.
It made me think about all the times I‚Äôd help my students and really got to empathize with their confusion.&lt;/p&gt;
&lt;p&gt;The single most important package development skill that made my work possible were &lt;strong&gt;unit tests&lt;/strong&gt;.
Since I was working with an already existing code base,
all the 100s of unit tests that were there needed to pass as I made changes.
I can‚Äôt emphasize how much time and sanity was saved from running the unit test suite.
Seemingly small changes would cause some tests to fail where I‚Äôd have to either fix my code or fix the test.
As the package started to stabilize and I started testing it out on a mock &lt;code&gt;learnr&lt;/code&gt; tutorial,
I even discovered &lt;a href=&#34;https://daniel.rbind.io/2019/08/06/inconsistencies-with-in-r/&#34;&gt;a bug in the &lt;code&gt;==&lt;/code&gt; operator&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Even though everyone was in a remote position, there was so much ancillary learning going on.
I
&lt;a href=&#34;https://daniel.rbind.io/2019/06/10/and-were-off-rstudio-internship-week-1-complete./&#34;&gt;tried&lt;/a&gt;
to keep a
&lt;a href=&#34;https://daniel.rbind.io/2019/06/18/rstudio-internship-week-2/&#34;&gt;list&lt;/a&gt;
as I was going though the
&lt;a href=&#34;https://daniel.rbind.io/2019/07/23/new-website-a-la-blogdown/&#34;&gt;internship&lt;/a&gt;,
but it got impractical.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;hanging-out&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Hanging out&lt;/h3&gt;
&lt;p&gt;Every one of my fellow &lt;a href=&#34;https://blog.rstudio.com/2019/03/25/summer-interns-2019/&#34;&gt;interns&lt;/a&gt;
are amazing.
Since RStudio is a remote company,
we tried to hold a weekly ‚Äúvirtual coffee‚Äù meeting so we can all see and talk to one another.
It really made the distance and time zone differences between all of us seem much smaller.
As I‚Äôm typing this blog post at rstudio::conf,
it felt like we already knew each other,
even though most of us haven‚Äôt seen the other in person before.&lt;/p&gt;
&lt;p&gt;Due to my conference and travel schedule over the summer,
I got to meet a handful of the interns in person beforehand.&lt;/p&gt;
&lt;div id=&#34;therese-and-malcolm-in-los-angeles-ca&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Therese and Malcolm in Los Angeles, CA&lt;/h4&gt;
&lt;p&gt;I got to meet Therese and Malcolm when I was in LA staying at a friend‚Äôs place for another friends wedding.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;rstudio_intern_therese_malcom.jpg&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;julia-in-san-francisco-ca&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Julia in San Francisco, CA&lt;/h4&gt;
&lt;p&gt;I got the tour of Julia‚Äôs lab when I was in San Francisco for the
&lt;a href=&#34;https://pybay.com/&#34;&gt;PyBay conference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;rstudio_intern_julia_1.jpg&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;More of Julia‚Äôs lab at the bottom of the post.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;joyce-in-raleigh-nc.&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Joyce in Raleigh, NC.&lt;/h4&gt;
&lt;p&gt;My dad‚Äôs job relocated him to Carry, NC so I was visiting him when a Data Science Happy Hour was announced in Raleigh and got to meet Joyce.&lt;/p&gt;
&lt;center&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;üì£ Raleigh data science folks (and ambitious Durham folks): &lt;br&gt;&lt;br&gt;üóì Data science happy hour at &lt;a href=&#34;https://twitter.com/lynnwoodbrewing?ref_src=twsrc%5Etfw&#34;&gt;@lynnwoodbrewing&lt;/a&gt; (on Whitaker Mill) on Tuesday 9/24 at 5:30 PM with the inimitable &lt;a href=&#34;https://twitter.com/CMastication?ref_src=twsrc%5Etfw&#34;&gt;@CMastication&lt;/a&gt;. &lt;br&gt;&lt;br&gt;(You can also buy food there or bring your own.)&lt;/p&gt;&amp;mdash; Tim Hopper (@tdhopper) &lt;a href=&#34;https://twitter.com/tdhopper/status/1171456421595996160?ref_src=twsrc%5Etfw&#34;&gt;September 10, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;/center&gt;
&lt;p&gt;&lt;img src=&#34;rstudio_intern_joyce.jpg&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;education-and-shiny-teams&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Education and Shiny teams&lt;/h3&gt;
&lt;p&gt;I met with the Shiny team for daily stand-ups, and the education team about every week.
The sheer amount of people I could ask for help is absolutely &lt;strong&gt;insane&lt;/strong&gt;.&lt;/p&gt;
&lt;center&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;This summer I got the opportunity work with the &lt;a href=&#34;https://twitter.com/rstudio?ref_src=twsrc%5Etfw&#34;&gt;@rstudio&lt;/a&gt; education and shiny teams. Definitely leveled up my &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; skills üçÑ, and looking forward to sharing it with the rest of the community. So sad this is all overüò≠. &lt;a href=&#34;https://t.co/qc7r3j6wg0&#34;&gt;pic.twitter.com/qc7r3j6wg0&lt;/a&gt;&lt;/p&gt;&amp;mdash; D‚ìêniel Chen üêçüè¥‚Äç‚ò†Ô∏è (@chendaniely) &lt;a href=&#34;https://twitter.com/chendaniely/status/1165696768618749953?ref_src=twsrc%5Etfw&#34;&gt;August 25, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;/center&gt;
&lt;/div&gt;
&lt;div id=&#34;everyone-else&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Everyone else&lt;/h3&gt;
&lt;p&gt;A lot of effort goes into making a remote company feel less isolating.
Many of us signed up for the virtual donut bot on Slack
that randomly pairs you up with someone else in the company to have a conference call to get to know each other.&lt;/p&gt;
&lt;p&gt;We also had an opportunity to signup/attend lightning talk sessions where people from the company talked about
current projects they‚Äôre working on for work/home.
Some people even talked about their hobbies!&lt;/p&gt;
&lt;p&gt;Even crazier, was we sat in on meetings with the President and CEO of the company on multiple occasions.
For a company that has such a wide global reach with employees geographically scattered around the world,
the community that RStudio has internally is &lt;strong&gt;genuinely&lt;/strong&gt; mirrored in the amazing community they have created
externally for the rest of us.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;more-than-technical-training&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;More than technical training&lt;/h3&gt;
&lt;p&gt;My time with the education group at rstudio really help me find my way.
I‚Äôm pretty much on my third iteration of a PhD dissertation topic,
and working with the education group helped me realize that I can apply all the lessons I‚Äôve learned
through
&lt;a href=&#34;https://carpentries.org/&#34;&gt;The Carpentries&lt;/a&gt;,
teaching on my own,
and working on educational tools
towards my dissertation topic.
For the first time in a long while I finally have a sense of direction
and feel in control of my own degree.&lt;/p&gt;
&lt;p&gt;Not only that, but being in intern was &lt;em&gt;so&lt;/em&gt; validating.
I‚Äôve felt like I was spinning my wheels since starting graduate school,
and it‚Äôs nice to know I‚Äôve been doing &lt;strong&gt;something&lt;/strong&gt; right these past few years.
I‚Äôm not going to lie,
there is a certain amount of ‚Äústreet cred‚Äù involved with being an intern,
but let me assure you,
I still barely grasp a lot of the internals of R.
If anything, I feel &lt;em&gt;even more&lt;/em&gt; impostor syndrome,
now that I‚Äôm back out in the wild.&lt;/p&gt;
&lt;p&gt;For now,
the best thing I can do is pay it forward.
And for those who don‚Äôt know,
my new dissertation topic is on the
education and pedagogy of data science in medicine.&lt;/p&gt;
&lt;p&gt;I hope to hear form everyone in the future!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;appendix&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Appendix&lt;/h3&gt;
&lt;p&gt;The other intern final blog posts (list is ongoing):&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://education.rstudio.com/blog/2019/10/tools-for-teaching-yaml-with-ymlthis/&#34;&gt;Malcolm Barrett&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://jcahoon.netlify.com/post/2019/08/23/reflection/&#34;&gt;Joyce&lt;/a&gt;
&lt;a href=&#34;https://education.rstudio.com/blog/2019/11/my-first-software-engineering-internship/&#34;&gt;Cahoon&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://fishandwhistle.netlify.com/post/2019/a-summer-of-rstudio-and-ggplot2/&#34;&gt;Dewey Dunnington&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://education.rstudio.com/blog/2019/12/this-is-not-like-the-others/&#34;&gt;Marly Gotti&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://education.rstudio.com/blog/2019/10/my-javascript-internship-at-rstudio/&#34;&gt;Maya Gans&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://education.rstudio.com/blog/2019/10/what-it-was-like-interning-for-rstudio/&#34;&gt;Yim Register&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://education.rstudio.com/blog/2019/10/twelve-weeks/&#34;&gt;Desir√©e De Leon&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Picture‚Äôs around Julia‚Äôs lab.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;rstudio_intern_julia_a.jpg&#34; /&gt;&lt;!-- --&gt;&lt;img src=&#34;rstudio_intern_julia_b.jpg&#34; /&gt;&lt;!-- --&gt;&lt;img src=&#34;rstudio_intern_julia_c.jpg&#34; /&gt;&lt;!-- --&gt;&lt;img src=&#34;rstudio_intern_julia_d.jpg&#34; /&gt;&lt;!-- --&gt;&lt;img src=&#34;rstudio_intern_julia_e.jpg&#34; /&gt;&lt;!-- --&gt;&lt;img src=&#34;rstudio_intern_julia_f.jpg&#34; /&gt;&lt;!-- --&gt;&lt;img src=&#34;rstudio_intern_julia_g.jpg&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Git Squash and Merge Workflow</title>
      <link>/2019/08/27/git-squash-and-merge-workflow/</link>
      <pubDate>Tue, 27 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/08/27/git-squash-and-merge-workflow/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I have a love-hate relationship with Git.
It took me years of following cookbooks and following strict set of commands to
get a sense of how it works.
I still have to spend time wrangling Git at times,
but I‚Äôve gotten to the point where I‚Äôm just annoyed, instead of scared.
Here is the branching-squash-and-merge workflow I‚Äôve been using at RStudio.&lt;/p&gt;
&lt;p&gt;Also, sorry I may be glossing over some of the Git basics in this post‚Ä¶&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;At RStudio, I‚Äôm using a brancing workflow where I am added directly as a collaborator to a project.
I still have to create pull requests for review,
but contrast this with me forking the repository and creating a pull regrest from my copy (&lt;code&gt;origin&lt;/code&gt;)
to the parent repository (&lt;code&gt;upstream&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Every workflow has benefits and drawbacks.
The current workflow I‚Äôm using is a ‚Äúsquash and merge‚Äù.
Where all the commits in a pull request are ‚Äúsquashed‚Äù into a single commit when it it merged into master.
This means the main commit history is &lt;em&gt;super&lt;/em&gt; clean,
and potentially sets up the repository to create automatic change logs or &lt;code&gt;NEWS&lt;/code&gt; reports.
The downside is if you start branching off other branches (instead of the main &lt;code&gt;master&lt;/code&gt;),
you‚Äôll have to &lt;code&gt;rebase&lt;/code&gt; or &lt;code&gt;cherry-pick&lt;/code&gt; to update the branches after a branch gets merged.&lt;/p&gt;
&lt;div id=&#34;the-general-problem&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The general problem&lt;/h1&gt;
&lt;pre class=&#34;markdown&#34;&gt;&lt;code&gt;m1-m2-m3 # the master branch
       \
        x11-x12-x13 # example branch_1
                  \
                   y21-y22-y23 # example branch_2 that depends on branch_1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After a squash and merge the Git DAG looks like this&lt;/p&gt;
&lt;pre class=&#34;markdown&#34;&gt;&lt;code&gt;m1-m2-m3-s1 # master branch + squash-merge
       \
        x11-x12-x13 # commits from branch_1 still exist
                  \
                   y21-y22-y23 # commits from branch_2 still exist&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can‚Äôt simply just squash merge &lt;code&gt;branch_2&lt;/code&gt;, becuase the commits from &lt;code&gt;branch_1&lt;/code&gt;
are technically still part of the history of &lt;code&gt;branch_2&lt;/code&gt;,
so a rebase of &lt;code&gt;branch_2&lt;/code&gt; against the new master will cause conflicts,
&lt;em&gt;and&lt;/em&gt; I‚Äôll have duplicate messages if I do another squash+merge of &lt;code&gt;branch_2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you did a &lt;code&gt;rebase&lt;/code&gt; you‚Äôll end up with this:&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;git checkout branch_2 # make sure you&amp;#39;re on branch_2
git rebase master
# fix conflicts
# so many conflicts&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;markdown&#34;&gt;&lt;code&gt;m1-m2-m3-s1 # master branch + squash-merge
          \
           x11-x12-x13-y21-y22-y23 # commits from branch_1 and branch_2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Instead, you need to &lt;code&gt;git cherry-pick&lt;/code&gt; the commits against the updated master
with just the commits from &lt;code&gt;branch_2&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;git checkout master # go to master branch so you can cherry-pick commits on top
git cherry-pick y21^..y23 # this is how to cherry-pick multiple commits
# (note the ^ to also include commit y21, otherwise it is left exclusive)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;markdown&#34;&gt;&lt;code&gt;m1-m2-m3-s1 # master branch + squash-merge
       \  \
        \  y21-y22-y23 # cherry-pick commits from branch_2 # this is good
         \
          x11-x12-x13 # commits from branch_1 still exist # already in s1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We don‚Äôt need the commits from branch one anymore (&lt;code&gt;x11&lt;/code&gt; to &lt;code&gt;x13&lt;/code&gt; in the example),
so we can deleate that branch using &lt;code&gt;git branch -D branch_1&lt;/code&gt;,
note you have to use a force delete with the &lt;code&gt;-D&lt;/code&gt; flag,
because git does not think that &lt;code&gt;branch_1&lt;/code&gt; was merged because we did a squash+merge.
Otherwise you would‚Äôve been able to use the lowercase &lt;code&gt;-d&lt;/code&gt; flag to delete the branch.&lt;/p&gt;
&lt;pre class=&#34;markdown&#34;&gt;&lt;code&gt;m1-m2-m3-s1 # master branch + squash-merge
          \
           y21-y22-y23 # cherry-pick commits from branch_2 # yay!&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we finally get everthing up to date, and can re-update the pull request for branch 2
by doing a force push: &lt;code&gt;git push -f origin master&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;in-the-real-world&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;In the real world&lt;/h1&gt;
&lt;p&gt;The PR process is the same as usual:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Create a branch&lt;/li&gt;
&lt;li&gt;Push the branch to the remote (i.e., Github, in this case)&lt;/li&gt;
&lt;li&gt;Pull request!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However, Github now gives you an option of which &lt;em&gt;green&lt;/em&gt; button you want!
Specifically, the option to ‚ÄúSquash and merge‚Äù&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;github_squash_merge.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This is fine when you have a totally independent PR
and there‚Äôs no other work that is based of the current work on that branch.
However here‚Äôs an example where I created separate branches for each ‚Äúfeature‚Äù,
but they all rely on the previous feature.&lt;/p&gt;
&lt;p&gt;Output of my &lt;code&gt;git log --oneline --graph --decorate --all&lt;/code&gt;, which I have aliased as &lt;code&gt;git l&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Here‚Äôs the current state we‚Äôre in after we perform a squash+merge on GitHub&lt;/p&gt;
&lt;pre class=&#34;markdown&#34;&gt;&lt;code&gt;              vignettes
             /
older_commits
             \
              master&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here‚Äôs what the actual state of the repository looks like.&lt;/p&gt;
&lt;pre class=&#34;console&#34;&gt;&lt;code&gt;dchen@longclaw [~/git/hub/gradethis]  (vignettes) 
[10:51:06] $ git l
* 16f4b6b (HEAD -&amp;gt; vignettes) intro to gradethis for learnr docs
* b4e2873 (origin/vignettes) emphasize not to use ==
* f66aa39 i don&amp;#39;t want to stash
| * feb82b3 (origin/gh-pages) Deploy rstudio-education/gradethis to github.com/rstudio-education/gradethis.git:gh-pages
| * a195fa3 (origin/master, origin/HEAD) fix gradethis demo (#70)
| | * 4aaee31 (origin/compare_default_formals, compare_default_formals) call_standarise_formals
| | * 19354dd refactor is_code_same to is_code_identical
| | * 5591ae8 rename fxn code_is_same -&amp;gt; is_code_same
| |/  
| | * 91cf16e (update_grading_demo) fix gradethis demo
| |/  
| * 9083fc8 (me/master, master) rename functions per #65 update docs and tests (#72)
| * 5ec1144 Docs to markdown per #68 by @andrie + Barret changes (#69)
| * 9cc3d6d Test result api fixes#60 (#63)
|/  
* d5cf9de Doc fixes (#62) and function pruning
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What we want is something like this:&lt;/p&gt;
&lt;pre class=&#34;markdown&#34;&gt;&lt;code&gt;older_commits
             \
              master
                    \
                     vignettes&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;First we pull and update &lt;code&gt;master&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;console&#34;&gt;&lt;code&gt;dchen@longclaw [~/git/hub/gradethis]  (master) 
[10:51:18] $ git pull origin master
From github.com:rstudio-education/gradethis
 * branch            master     -&amp;gt; FETCH_HEAD
Updating 9083fc8..a195fa3
Fast-forward
 inst/tutorials/grading-demo/grading-demo.Rmd | 249 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-----------------------------------------------------------------------------------------------------
 1 file changed, 112 insertions(+), 137 deletions(-)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that master is up to date,&lt;/p&gt;
&lt;pre class=&#34;markdown&#34;&gt;&lt;code&gt;              vignettes
             /
older_commits
             \
              master-master # master has moved up a commit from pull&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;we can cherry-pick the commits of interest&lt;/p&gt;
&lt;pre class=&#34;console&#34;&gt;&lt;code&gt;dchen@longclaw [~/git/hub/gradethis]  (master) 
[10:51:30] $ git cherry-pick f66aa39^..16f4b6b
[master 28c7ebe] i don&amp;#39;t want to stash
 Date: Wed Aug 14 10:03:25 2019 -0400
 3 files changed, 72 insertions(+)
 create mode 100644 vignettes/000-introduction_to_gradethis.Rmd
 create mode 100644 vignettes/010-using_equal.Rmd
 create mode 100644 vignettes/990-developers_guide.Rmd
[master 9b84be6] emphasize not to use ==
 Date: Wed Aug 14 11:44:36 2019 -0400
 1 file changed, 4 insertions(+), 4 deletions(-)
[master 846bb18] intro to gradethis for learnr docs
 Date: Tue Aug 27 10:51:06 2019 -0400
 1 file changed, 151 insertions(+), 9 deletions(-)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that I used the &lt;code&gt;&amp;lt;commit&amp;gt;^..&amp;lt;commit&amp;gt;&lt;/code&gt; notation while &lt;code&gt;cherry-pick&lt;/code&gt;ing.
The &lt;code&gt;^&lt;/code&gt; means to also include that commit, otherwise it will start from that commit,
but not include it (i.e., left exclusive).&lt;/p&gt;
&lt;p&gt;If you wanted to not use the &lt;code&gt;^&lt;/code&gt; you need to pick the previous commit hash.
In my case it would‚Äôve been &lt;code&gt;d5cf9de&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now, we need to clean up the references to our branch.
Since we &lt;code&gt;cherry-pick&lt;/code&gt;ed commits on master we‚Äôre actually still on master.
So we need to do update where our branches are pointing to by using `git reset ‚Äìhard &lt;commit&gt;&lt;/p&gt;
&lt;p&gt;First we checkout the &lt;code&gt;vignettes&lt;/code&gt; branch,&lt;/p&gt;
&lt;pre class=&#34;console&#34;&gt;&lt;code&gt;dchen@longclaw [~/git/hub/gradethis]  (master) 
[10:51:46] $ git checkout vignettes 
Switched to branch &amp;#39;vignettes&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;console&#34;&gt;&lt;code&gt;dchen@longclaw [~/git/hub/gradethis]  (vignettes) 
[10:51:52] $ git l
* 846bb18 (master) intro to gradethis for learnr docs
* 9b84be6 emphasize not to use ==
* 28c7ebe i don&amp;#39;t want to stash
* a195fa3 (origin/master, origin/HEAD) fix gradethis demo (#70)
| * 16f4b6b (HEAD -&amp;gt; vignettes) intro to gradethis for learnr docs
| * b4e2873 (origin/vignettes) emphasize not to use ==
| * f66aa39 i don&amp;#39;t want to stash
| | * feb82b3 (origin/gh-pages) Deploy rstudio-education/gradethis to github.com/rstudio-education/gradethis.git:gh-pages
| | * 4aaee31 (origin/compare_default_formals, compare_default_formals) call_standarise_formals
| | * 19354dd refactor is_code_same to is_code_identical
| | * 5591ae8 rename fxn code_is_same -&amp;gt; is_code_same
| |/  
|/|   
| | * 91cf16e (update_grading_demo) fix gradethis demo
| |/  
|/|   
* | 9083fc8 (me/master) rename functions per #65 update docs and tests (#72)
* | 5ec1144 Docs to markdown per #68 by @andrie + Barret changes (#69)
* | 9cc3d6d Test result api fixes#60 (#63)
|/  
* d5cf9de Doc fixes (#62) and function pruning&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then set it to the correct commit location.&lt;/p&gt;
&lt;pre class=&#34;console&#34;&gt;&lt;code&gt;dchen@longclaw [~/git/hub/gradethis]  (vignettes) 
[10:52:04] $ git reset --hard 846bb18
HEAD is now at 846bb18 intro to gradethis for learnr docs&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We then repeat the process for the &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt;
&lt;p&gt;First &lt;code&gt;checkout master&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;console&#34;&gt;&lt;code&gt;dchen@longclaw [~/git/hub/gradethis]  (vignettes) 
[10:52:07] $ git checkout master
Switched to branch &amp;#39;master&amp;#39;
Your branch is ahead of &amp;#39;origin/master&amp;#39; by 3 commits.
  (use &amp;quot;git push&amp;quot; to publish your local commits)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then &lt;code&gt;reset --hard&lt;/code&gt; to the correct location:&lt;/p&gt;
&lt;pre class=&#34;console&#34;&gt;&lt;code&gt;dchen@longclaw [~/git/hub/gradethis]  (master) 
[10:52:11] $ git reset --hard a195fa3
HEAD is now at a195fa3 fix gradethis demo (#70)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now everything is in the right place&lt;/p&gt;
&lt;pre class=&#34;markdown&#34;&gt;&lt;code&gt;older_commits
             \
              master
                    \
                     vignettes&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;console&#34;&gt;&lt;code&gt;dchen@longclaw [~/git/hub/gradethis]  (master) 
[10:52:21] $ git l
* 846bb18 (vignettes) intro to gradethis for learnr docs
* 9b84be6 emphasize not to use ==
* 28c7ebe i don&amp;#39;t want to stash
* a195fa3 (HEAD -&amp;gt; master, origin/master, origin/HEAD) fix gradethis demo (#70)
| * feb82b3 (origin/gh-pages) Deploy rstudio-education/gradethis to github.com/rstudio-education/gradethis.git:gh-pages
| * 4aaee31 (origin/compare_default_formals, compare_default_formals) call_standarise_formals
| * 19354dd refactor is_code_same to is_code_identical
| * 5591ae8 rename fxn code_is_same -&amp;gt; is_code_same
|/  
| * 91cf16e (update_grading_demo) fix gradethis demo
|/  
* 9083fc8 (me/master) rename functions per #65 update docs and tests (#72)
* 5ec1144 Docs to markdown per #68 by @andrie + Barret changes (#69)
* 9cc3d6d Test result api fixes#60 (#63)
| * b4e2873 (origin/vignettes) emphasize not to use ==
| * f66aa39 i don&amp;#39;t want to stash
|/  
* d5cf9de Doc fixes (#62) and function pruning&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, we can update the GitHub remote by force bushing the branch
(remember to be on the branch before pushing).&lt;/p&gt;
&lt;pre class=&#34;console&#34;&gt;&lt;code&gt;dchen@longclaw [~/git/hub/gradethis]  (master) 
[10:53:25] $ git checkout vignettes 
Switched to branch &amp;#39;vignettes&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;console&#34;&gt;&lt;code&gt;dchen@longclaw [~/git/hub/gradethis]  (vignettes) 
[10:53:30] $ git push -f origin vignettes 
Enumerating objects: 15, done.
Counting objects: 100% (15/15), done.
Delta compression using up to 4 threads
Compressing objects: 100% (14/14), done.
Writing objects: 100% (14/14), 3.27 KiB | 3.27 MiB/s, done.
Total 14 (delta 7), reused 0 (delta 0)
remote: Resolving deltas: 100% (7/7), completed with 1 local object.
To github.com:rstudio-education/gradethis.git
 + b4e2873...846bb18 vignettes -&amp;gt; vignettes (forced update)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The final Graph now looks like this&lt;/p&gt;
&lt;pre class=&#34;console&#34;&gt;&lt;code&gt;dchen@longclaw [~/git/hub/gradethis]  (vignettes) 
[10:54:13] $ git l
* 846bb18 (HEAD -&amp;gt; vignettes, origin/vignettes) intro to gradethis for learnr docs
* 9b84be6 emphasize not to use ==
* 28c7ebe i don&amp;#39;t want to stash
* a195fa3 (origin/master, origin/HEAD, master) fix gradethis demo (#70)
| * feb82b3 (origin/gh-pages) Deploy rstudio-education/gradethis to github.com/rstudio-education/gradethis.git:gh-pages
| * 4aaee31 (origin/compare_default_formals, compare_default_formals) call_standarise_formals
| * 19354dd refactor is_code_same to is_code_identical
| * 5591ae8 rename fxn code_is_same -&amp;gt; is_code_same
|/  
| * 91cf16e (update_grading_demo) fix gradethis demo
|/  
* 9083fc8 (me/master) rename functions per #65 update docs and tests (#72)
* 5ec1144 Docs to markdown per #68 by @andrie + Barret changes (#69)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;It‚Äôs taken me many years to be comfortable with Git.
My previous go-to method was to &lt;code&gt;rebase&lt;/code&gt; one branch on top of the other,
but with the squash-and-merge method, a lot of commits get repeated,
and it just makes &lt;code&gt;rebase&lt;/code&gt;ing a pain with all the commits and merge conflicts.&lt;/p&gt;
&lt;p&gt;In this particular workflow I found &lt;code&gt;cherry-pick&lt;/code&gt; to be way more convenient,
and led to fewer merge conflicts.&lt;/p&gt;
&lt;p&gt;Again, the notation for &lt;code&gt;cherry-pick&lt;/code&gt; is weird, in that it is &lt;em&gt;left exclusive&lt;/em&gt; unless you put in the &lt;code&gt;^&lt;/code&gt;,
i.e.,&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;git cherry-pick &amp;lt;commit-start&amp;gt;^..&amp;lt;commit-end&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;not&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;git cherry-pick &amp;lt;commit-start&amp;gt;..&amp;lt;commit-end&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Inconsistencies with the `==` operator in R</title>
      <link>/2019/08/06/inconsistencies-with-in-r/</link>
      <pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/08/06/inconsistencies-with-in-r/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;One of the cool things about working on &lt;a href=&#34;https://github.com/rstudio-education/gradethis&#34;&gt;&lt;code&gt;gradethis&lt;/code&gt;&lt;/a&gt;
(&lt;a href=&#34;https://github.com/rstudio-education/gradethis/issues/18&#34;&gt;&lt;code&gt;grader&lt;/code&gt; need to be renamed&lt;/a&gt;)
is that we end up doing things that aren‚Äôt common in R (i.e., grading and comparing code).&lt;/p&gt;
&lt;p&gt;I discovered an inconsistency with the &lt;code&gt;==&lt;/code&gt; operator when &lt;a href=&#34;https://github.com/rstudio-education/gradethis/issues/28&#34;&gt;comparing (long) R expressions&lt;/a&gt;.&lt;/p&gt;
&lt;!-- more --&gt;
&lt;div id=&#34;a-quick-primer-on-expressions&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;A quick primer on expressions&lt;/h2&gt;
&lt;p&gt;In R, you can create an expression using the
&lt;a href=&#34;https://stat.ethz.ch/R-manual/R-devel/library/base/html/substitute.html&#34;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt; function.
This is essentially the code that R will execute.
It is similar to the ‚Äústring‚Äù that will be executed,
but an actual string in R will return a string, not a command or set of instructions that R will execute.&lt;/p&gt;
&lt;p&gt;Compare:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;3 + 3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which will return the executed result of &lt;code&gt;3 + 3&lt;/code&gt; and&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;quot;3 + 3&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;3 + 3&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which will return the string &lt;code&gt;&#34;3 + 3&#34;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;with:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;quote(3 + 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 3 + 3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which returns the expression &lt;code&gt;3 + 3&lt;/code&gt; that is the instruction to R without actually evaluating it.&lt;/p&gt;
&lt;p&gt;If we wanted to evaluate the expression, we can call &lt;code&gt;eval&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;eval(quote(3 + 3))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can read more about expressions in the
&lt;a href=&#34;http://adv-r.had.co.nz/Expressions.html&#34;&gt;Expressions Chapter in Advanced R&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-bug&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The ‚Äúbug‚Äù&lt;/h2&gt;
&lt;p&gt;The bug was detected in &lt;code&gt;gradethis&lt;/code&gt; where we want to compare student submitted code with the instructor solution.
There are multiple steps in the comparison process,
but the first step is to simply check if the two bits of code are the same.
That way, we can stop there and not have to go through the process to detect where the actual differences are.&lt;/p&gt;
&lt;p&gt;The comparison code was originally written to use &lt;code&gt;==&lt;/code&gt; to compare the expressions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;user &amp;lt;- quote(3 + 3)
solution &amp;lt;- quote(3 + 3)

user == solution&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Garrett Grolemund put in a bunch of examples that show some &lt;a href=&#34;https://github.com/rstudio-education/gradethis/issues/28#issuecomment-510541776&#34;&gt;weird behaviour&lt;/a&gt;.
I initially thought it had to do with name spacing the function name, or after using the &lt;code&gt;:&lt;/code&gt; notation to select columns in a dataframe via &lt;code&gt;tidyselect&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When the two expressions are the same, we get &lt;code&gt;TRUE&lt;/code&gt; as expected&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# supposed to return TRUE
u &amp;lt;- quote(tidyr::gather(key = key, value = value, new_sp_m014:newrel_f65, na.rm = TRUE))
s &amp;lt;- quote(tidyr::gather(key = key, value = value, new_sp_m014:newrel_f65, na.rm = TRUE))
u == s&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But when we change the values for &lt;code&gt;na.rm&lt;/code&gt;, we &lt;strong&gt;also&lt;/strong&gt; get &lt;code&gt;TRUE&lt;/code&gt; when the expressions are not the same.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# supposed to return FALSE
u &amp;lt;- quote(tidyr::gather(key = key, value = value, new_sp_m014:newrel_f65, na.rm = TRUE))
s &amp;lt;- quote(tidyr::gather(key = key, value = value, new_sp_m014:newrel_f65, na.rm = FALSE))
u == s&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But it seems if we get rid of the tidyselect column selector, we get the correct result.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# If we remove the third argument the error goes away
u &amp;lt;- quote(tidyr::gather(key = key, value = value, na.rm = TRUE))
s &amp;lt;- quote(tidyr::gather(key = key, value = value, na.rm = FALSE))
u == s&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I brought this up on our daily shiny-core stand-ups and Winston Chang thought it may have something to do with the &lt;code&gt;deparse&lt;/code&gt; function since it doesn‚Äôt actually matter what the expressions being compared are.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;u &amp;lt;- quote(f(x123456789012345678901234567890123456789012345678901234567890, 1))
s &amp;lt;- quote(f(x123456789012345678901234567890123456789012345678901234567890, 2))
u == s&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can see Winston‚Äôs comment and link to R code in question
&lt;a href=&#34;https://github.com/rstudio-education/gradethis/issues/28#issuecomment-510610227&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pretty much when &lt;code&gt;==&lt;/code&gt; is used to compare expressions, the expressions are passed through &lt;code&gt;deparse&lt;/code&gt;.
When &lt;code&gt;deparse&lt;/code&gt; is run on an expression, it breaks it up into vectors that are &lt;code&gt;60L&lt;/code&gt; characters long,
which is fine, but the R bug is when the comparison is only performed with the first element of the vector.
That‚Äôs why only the end of the expressions seem to ‚Äúnot matter‚Äù.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reporting-the-bug&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Reporting the bug&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://r.789695.n4.nabble.com/Unexpected-behaviour-when-comparing-long-quoted-expressions-td4758181.html&#34;&gt;I reported the findings to the r-devel mailing list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Where, even after botching my first listserv submission, I got a response from Martin Maechler (R-core)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Looking at that and its context, I think we (R core) should
reconsider that implementation of ‚Äò==‚Äô which indeed does about
the same thing as deparse {which also truncates at some point by
default; something very very reasonable for error messages, but
undesirable in other cases}.&lt;/p&gt;
&lt;p&gt;But I think it‚Äôs fair expectation that comparing calls [‚Äúlanguage‚Äù]
with ‚Äò==‚Äô should compare the full call‚Äôs syntax even if that may
occasionally be very long.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So it is actually a behavior that will get patched one day.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-fix&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The fix&lt;/h2&gt;
&lt;p&gt;We ended up &lt;a href=&#34;https://github.com/rstudio-education/gradethis/pull/34/files&#34;&gt;making changes&lt;/a&gt;
to &lt;code&gt;gradethis&lt;/code&gt; by using &lt;code&gt;identical()&lt;/code&gt; while comparing quoted expressions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;u &amp;lt;- quote(f(x123456789012345678901234567890123456789012345678901234567890, 1))
s &amp;lt;- quote(f(x123456789012345678901234567890123456789012345678901234567890, 2))
identical(u, s)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using &lt;code&gt;identical()&lt;/code&gt; is a much better way when we are comparing code &lt;em&gt;and&lt;/em&gt; results, because &lt;code&gt;==&lt;/code&gt; will return a matrix when comparing 2 dataframes where using &lt;code&gt;all&lt;/code&gt; has problems when there are &lt;code&gt;NA&lt;/code&gt; missing values.&lt;/p&gt;
&lt;p&gt;We want to see if the 2 vectors are the same&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;u &amp;lt;- c(1, 2, 3)
s &amp;lt;- c(1, 2, NA)
all(u == s)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] NA&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can remove missing values, but now when either the user code or solution code does contains an &lt;code&gt;NA&lt;/code&gt; it gets ignored.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;u &amp;lt;- c(1, 2, 3)
s &amp;lt;- c(1, 2, NA)
all(u == s, na.rm = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;u &amp;lt;- c(1, 2, NA)
s &amp;lt;- c(1, 2, 3)
all(u == s, na.rm = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, we
&lt;a href=&#34;https://github.com/rstudio-education/gradethis/pull/56/files&#34;&gt;nudge toward using identical&lt;/a&gt; and
&lt;a href=&#34;https://github.com/rstudio-education/gradethis/pull/47&#34;&gt;raise a warning&lt;/a&gt;
when we detect &lt;code&gt;==&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;u &amp;lt;- c(1, 2, NA)
s &amp;lt;- c(1, 2, 3)
identical(u, s)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Does Donald Knuth owe me a dollar now?&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>New Website a la Blogdown!</title>
      <link>/2019/07/23/new-website-a-la-blogdown/</link>
      <pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/07/23/new-website-a-la-blogdown/</guid>
      <description>&lt;p&gt;I finally got everything moved over to &lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34; target=&#34;_blank&#34;&gt;blogdown&lt;/a&gt;
with the &lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt; &lt;a href=&#34;https://github.com/gcushen/hugo-academic&#34; target=&#34;_blank&#34;&gt;Academic&lt;/a&gt; theme.
Thanks so much to &lt;a href=&#34;https://alison.rbind.io/&#34; target=&#34;_blank&#34;&gt;Allison Hill&lt;/a&gt;, who ran the &lt;a href=&#34;https://summer-of-blogdown.netlify.com&#34; target=&#34;_blank&#34;&gt;summer-of-blogdown&lt;/a&gt;
tutorial for us &lt;a href=&#34;https://blog.rstudio.com/2019/03/25/summer-interns-2019/&#34; target=&#34;_blank&#34;&gt;RStudio interns&lt;/a&gt;.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;The transition was pretty seamless. Mainly because I didn&amp;rsquo;t really have that much content to move over.
The biggest change was I had to commout my &lt;code&gt;categories&lt;/code&gt; tag in my YAML post headers becuase they were causing the
site to not build.&lt;/p&gt;

&lt;p&gt;While writing this post, I just realized that the way categories and tags are specified in hugo
are not the same as jekyll.&lt;/p&gt;

&lt;p&gt;In jekyll I could write categories as&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;categories: R
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;categories:
  - R
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But in hugo it seems it&amp;rsquo;s a list written as&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;categories: [&#39;R&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Anyway, it was fun going through and enabling/disabling different widgets.
I&amp;rsquo;ll keep it simple for now, and build on the site accordinly.
I&amp;rsquo;m just happy I can maintain my website without worrying how I had Jekyll setup to properly &lt;code&gt;serve&lt;/code&gt; the site.
The folks at RStudio truely make things easy for us end users.&lt;/p&gt;

&lt;p&gt;The other change I did was to make my old repository, &lt;code&gt;chendaniely.github.io&lt;/code&gt; a submodule of my blogdown site repo
and change the target folder the published contents will be from the default &lt;code&gt;public&lt;/code&gt; by addding this
to my main &lt;code&gt;config.toml&lt;/code&gt; file&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;publishDir = &amp;quot;chendaniely.github.io&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This way my old url will still work (I&amp;rsquo;m really attached to the &lt;code&gt;.github.io&lt;/code&gt; domain),
but I can still have netlify deploy everything and have my &lt;code&gt;rbind.io&lt;/code&gt; domain as well.
Everything will look the same, and I&amp;rsquo;ll work on redirecting everything to a single domain sometime later.&lt;/p&gt;

&lt;p&gt;I also needed to change the &lt;code&gt;[build]&lt;/code&gt; section in my &lt;code&gt;netlify.toml&lt;/code&gt; file to point to the new build location&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[build]
  # publish = &amp;quot;public&amp;quot;
  publish = &amp;quot;chendaniely.github.io&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Netlify is a little wonky when you have SSH keys enabled with the submodule.
I get an error message because when Netlify tries to clone the submodule I get a permission error&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fatal: clone of &#39;git@github.com:chendaniely/chendaniely.github.io.git&#39; into submodule path &#39;/opt/build/repo/chendaniely.github.io&#39; failed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That makes sense, the Netlify servers do not have SSH keys setup on my GitHub account.
I haven&amp;rsquo;t figured out how to do this yet, so I switched my &lt;code&gt;.gitmodule&lt;/code&gt; url to the https link.
However, that means, for the time being, I created another remote with my SSH url (&lt;code&gt;git remote add originssh ...&lt;/code&gt;)
and I have to push using that remote instead of the &lt;code&gt;origin&lt;/code&gt; url (which is the https link).&lt;/p&gt;

&lt;p&gt;Now to start that massive backlog of things I&amp;rsquo;ve been doing this summer ( :&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RStudio internship week 2</title>
      <link>/2019/06/18/rstudio-internship-week-2/</link>
      <pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/06/18/rstudio-internship-week-2/</guid>
      <description>

&lt;p&gt;The main topics and events of last week were:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Much git.&lt;/li&gt;
&lt;li&gt;Metaprogramming and non-standard evaluation (NSE) in R&lt;/li&gt;
&lt;li&gt;Four 1-hour workshops by Allison Hill on the &lt;a href=&#34;https://summer-of-blogdown.netlify.com&#34; target=&#34;_blank&#34;&gt;summer-of-blogdown&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;moving things over from jekyll will take some time&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So many of the random things I&amp;rsquo;ve tinkered with in the past have come front and center.
As an educator,
I know seeing these things again make learning and understanding them easier.
You build on your previous knowledge to solidify, fix, and fill in gaps in your mental model.
The process repeats until you get an understanding about a topic.&lt;/p&gt;

&lt;p&gt;For me, I&amp;rsquo;m getting a better foundation to how NSE works and how it all plays together within the Tidyverse.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h3 id=&#34;git&#34;&gt;Git&lt;/h3&gt;

&lt;p&gt;I got some things merged!&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/rstudio-education/grader/pull/10&#34; target=&#34;_blank&#34;&gt;pull-request&lt;/a&gt; that was broken and merged on my first day finally was &lt;a href=&#34;https://github.com/rstudio-education/grader/pull/14&#34; target=&#34;_blank&#34;&gt;fixed and merged&lt;/a&gt;.
I also got to work with the &lt;a href=&#34;https://github.com/jimhester/lintr&#34; target=&#34;_blank&#34;&gt;lintr&lt;/a&gt; package and &lt;a href=&#34;https://github.com/rstudio-education/grader/pull/17&#34; target=&#34;_blank&#34;&gt;merged it into &lt;code&gt;grader&lt;/code&gt;&lt;/a&gt; too.&lt;/p&gt;

&lt;p&gt;This week was probably the first time I&amp;rsquo;ve used &lt;code&gt;git amend&lt;/code&gt; in a long time (if ever?).
I&amp;rsquo;ve typically always just made the commit, and run &lt;code&gt;git rebase -i&lt;/code&gt; to squash and/or amend my commits.
I can see why common operations like making changes to the previous commit would have a shortcut.
I typically don&amp;rsquo;t use these features because it&amp;rsquo;s another thing to teach, and understanding &lt;code&gt;git rebase -i&lt;/code&gt; is more general than &lt;code&gt;git commit --amend&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What &lt;code&gt;--amend&lt;/code&gt; allows you to do is replace the previous git commit with another one.
You can fix the commit message, or add/fix file you missed.
Theses are all ways to make the commit history cleaner.&lt;/p&gt;

&lt;p&gt;The recipe looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add &amp;lt;file&amp;gt;
git commit --amend

&amp;lt;Fix/modify the commit message&amp;gt;

git push -f origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The last line does a &lt;code&gt;-f&lt;/code&gt; force &lt;code&gt;push&lt;/code&gt;, because the commit is actually different from the one before you &lt;code&gt;--amend&lt;/code&gt;ed.&lt;/p&gt;

&lt;h3 id=&#34;r-package-versions&#34;&gt;R package versions&lt;/h3&gt;

&lt;p&gt;There&amp;rsquo;s a convention about version numbering adding a &lt;code&gt;.9000&lt;/code&gt;+ after the patch (e.g., v0.1.4.9000) to show a
a development version number.
You can couple this with the &lt;code&gt;DESCRIPTION&lt;/code&gt; file by forcing a particular version to make sure you and the team
all have access to the same development features.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/rstudio-education/grader/blob/master/DESCRIPTION&#34; target=&#34;_blank&#34;&gt;I came across this in &lt;code&gt;grader&lt;/code&gt;&lt;/a&gt; that has a &lt;code&gt;Imports&lt;/code&gt; for &lt;code&gt;learnr (&amp;gt;= 0.9.2.9001)&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;grader-progress&#34;&gt;&lt;code&gt;grader&lt;/code&gt; progress&lt;/h3&gt;

&lt;p&gt;We&amp;rsquo;re probably &lt;a href=&#34;[https://github.com/rstudio-education/grader/issues/18]&#34; target=&#34;_blank&#34;&gt;going to change the name of the package&lt;/a&gt; to
&lt;code&gt;gradethis&lt;/code&gt; because the package &lt;code&gt;gradeR&lt;/code&gt; (note capital R) was submitted to CRAN right as I started.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s what I learned about the library I&amp;rsquo;m working on this week:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;learnr&lt;/code&gt; set&amp;rsquo;s the &lt;code&gt;checker&lt;/code&gt; function

&lt;ul&gt;
&lt;li&gt;In the knitr chunk &lt;code&gt;exercise.checker&lt;/code&gt; specifies the &lt;code&gt;checker&lt;/code&gt; function

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tutorial_options(exercise.timelimit = 60, exercise.checker = grade_learnr)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;In this example, &lt;code&gt;grade_learnr&lt;/code&gt; is the main entrypoint from &lt;code&gt;learnr&lt;/code&gt; to &lt;code&gt;grader&lt;/code&gt; and my work starts with this function.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;checker&lt;/code&gt; is called on &lt;a href=&#34;https://github.com/rstudio/learnr/blob/master/R/exercise.R#L129&#34; target=&#34;_blank&#34;&gt;line 129 in &lt;code&gt;exercise.R&lt;/code&gt; in &lt;code&gt;learnr&lt;/code&gt;&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;the &lt;code&gt;checker&lt;/code&gt; function (i.e., &lt;code&gt;grade_learnr&lt;/code&gt;) returns a value depending on what is passed into it

&lt;ul&gt;
&lt;li&gt;if missing: returns a &lt;code&gt;list()&lt;/code&gt; with &lt;code&gt;message&lt;/code&gt;, &lt;code&gt;correct&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, and &lt;code&gt;location&lt;/code&gt; keys&lt;/li&gt;
&lt;li&gt;if error: &lt;code&gt;graded&lt;/code&gt; object (named &lt;code&gt;checked_result&lt;/code&gt; of class &lt;code&gt;grader_graded&lt;/code&gt;) with &lt;code&gt;correct&lt;/code&gt; and &lt;code&gt;message&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;or evaluated code&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There&amp;rsquo;s a bunch of stuff within the &lt;code&gt;exercise.R&lt;/code&gt; function in &lt;code&gt;learnr&lt;/code&gt; that captures information from shiny,
sets up the &lt;code&gt;knitr&lt;/code&gt; environment, and inserts the output and results into the correct place in the DOM.
That&amp;rsquo;ll be a separate writeup when I leave the &lt;code&gt;grader&lt;/code&gt; world.&lt;/p&gt;

&lt;p&gt;For the next week or so the goal is to update the &lt;a href=&#34;https://github.com/rstudio-education/grader/issues/11&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;check_result&lt;/code&gt; API&lt;/a&gt;,
which got me down the rabbit hole of non-standard evaluation in R (I&amp;rsquo;ll talk about it in a separate set of posts).&lt;/p&gt;

&lt;h3 id=&#34;non-standard-evaluation-nse&#34;&gt;Non-standard Evaluation (NSE)&lt;/h3&gt;

&lt;p&gt;I gave &lt;a href=&#34;https://github.com/chendaniely/satRdays-dc2018-functions&#34; target=&#34;_blank&#34;&gt;a talk&lt;/a&gt; about writing functions in R which touched on NSE but it was pretty superficial.
Since NSE is so crucial to &lt;code&gt;grader&lt;/code&gt; I&amp;rsquo;ll write a series of posts about this topic and eventually turn it into a talk.&lt;/p&gt;

&lt;p&gt;In the meantime, here are the materials (in no particular order) I&amp;rsquo;ll be reading to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dplyr.tidyverse.org/articles/programming.html&#34; target=&#34;_blank&#34;&gt;https://dplyr.tidyverse.org/articles/programming.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tidyeval.tidyverse.org/&#34; target=&#34;_blank&#34;&gt;https://tidyeval.tidyverse.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggplot2.tidyverse.org/dev/articles/ggplot2-in-packages.html#using-aes-and-vars-in-a-package-function&#34; target=&#34;_blank&#34;&gt;https://ggplot2.tidyverse.org/dev/articles/ggplot2-in-packages.html#using-aes-and-vars-in-a-package-function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://adv-r.hadley.nz/&#34; target=&#34;_blank&#34;&gt;https://adv-r.hadley.nz/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;misc&#34;&gt;Misc&lt;/h3&gt;

&lt;p&gt;Other random things I&amp;rsquo;ve discovered this week&lt;/p&gt;

&lt;h4 id=&#34;dplyr-count-vs-dplyr-tally&#34;&gt;&lt;code&gt;dplyr::count&lt;/code&gt; vs &lt;code&gt;dplyr::tally&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;From the docs:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;tally() is a convenient wrapper for summarise that will either call n() or sum(n) depending on whether you&amp;rsquo;re tallying for the first time, or re-tallying.
count() is similar but calls group_by() before and ungroup() after. If the data is already grouped, count() adds an additional group that is removed afterwards.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;dplyr::count&lt;/code&gt; can count observations with 0 counts (useful for group_by operations) with the &lt;code&gt;.drop&lt;/code&gt; argument&lt;/p&gt;

&lt;h4 id=&#34;pryr-standarise-call&#34;&gt;&lt;code&gt;pryr::standarise_call&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Manipulating the function call is black magic NSE voodoo.
This is the stuff that is happening within &lt;code&gt;grader&lt;/code&gt; that gets student code, solution code, &lt;code&gt;learnr&lt;/code&gt; and &lt;code&gt;grader&lt;/code&gt; arguments
that are all passed into &lt;code&gt;grade_learnr&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# code below was copy/pasted from the console

my_add &amp;lt;- function(x, y) {
  x + y
}

# pass in part of an expression
call &amp;lt;- pryr::standardise_call(quote(my_add(x = 3)))

# on the fly add more parameters!
call$y &amp;lt;- 10 

# evaluate the thing
eval(call) 

## [1] 13
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This all uses the global environment,
but &lt;code&gt;grader&lt;/code&gt; will be doing this type of thing with separate environments for each exercise that will be checked.&lt;/p&gt;

&lt;p&gt;Also, this is all how &lt;code&gt;match.call&lt;/code&gt; works in base R.&lt;/p&gt;

&lt;h4 id=&#34;checkmate-package&#34;&gt;&lt;code&gt;checkmate&lt;/code&gt; package&lt;/h4&gt;

&lt;p&gt;There is a &lt;a href=&#34;https://mllg.github.io/checkmate/index.html&#34; target=&#34;_blank&#34;&gt;package called &lt;code&gt;checkmate&lt;/code&gt;&lt;/a&gt; that is unit testing (e.g., &lt;code&gt;testthat&lt;/code&gt;) on steroids.
It allows you to more specific type and argument checking in R.
I haven&amp;rsquo;t work with the package personally yet, but it does seem to be like &lt;a href=&#34;https://docs.python.org/3/library/typing.html&#34; target=&#34;_blank&#34;&gt;type hints in Python&lt;/a&gt;
and allows more specific checks into what objects in R contain.&lt;/p&gt;

&lt;h4 id=&#34;credentials&#34;&gt;Credentials&lt;/h4&gt;

&lt;p&gt;One of the coolest things about being an intern at RStudio is being on the slack channel!
I try to keep my questions reserved but one of the things that have always bothered me was how store and access credentials for R.
Putting in API keys in &lt;code&gt;.Renviron&lt;/code&gt; are common practice, but I piggy-backed on another intern&amp;rsquo;s question by asking about
storing passwords more securely than in a plain text file.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve used the &lt;a href=&#34;https://cran.rstudio.com/web/packages/rstudioapi/index.html&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;rstudioapi&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://cran.r-project.org/web/packages/secret/vignettes/secrets.html&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;secret&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://cran.r-project.org/web/packages/getPass/index.html&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;getPass&lt;/code&gt;&lt;/a&gt; libraries &lt;a href=&#34;https://github.com/bi-sdal/sdalr&#34; target=&#34;_blank&#34;&gt;before&lt;/a&gt;,
but as &lt;a href=&#34;https://twitter.com/raymondh&#34; target=&#34;_blank&#34;&gt;Raymond Hettinger&lt;/a&gt; always says: There must be a better way.&lt;/p&gt;

&lt;p&gt;The resource I was given was to look at how database credentials are stored: &lt;a href=&#34;https://db.rstudio.com/best-practices/managing-credentials/&#34; target=&#34;_blank&#34;&gt;https://db.rstudio.com/best-practices/managing-credentials/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;summer-of-blog-down&#34;&gt;Summer of blog down&lt;/h3&gt;

&lt;p&gt;Lastly,
the great Allison Hill hosted a series of blogdown workshops for people who were interested, &lt;a href=&#34;https://summer-of-blogdown.netlify.com&#34; target=&#34;_blank&#34;&gt;summer-of-blogdown&lt;/a&gt;.
It was a total of 4 days and we covered
the basics of blogdown,
how to pick (the &lt;a href=&#34;https://themes.gohugo.io/academic/&#34; target=&#34;_blank&#34;&gt;academic&lt;/a&gt;) themes,
&lt;a href=&#34;https://chendaniely.netlify.com/&#34; target=&#34;_blank&#34;&gt;deploying it on netlify&lt;/a&gt;,
and best ways to maintain the site.&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t realize how amazingly flexible the &lt;a href=&#34;https://themes.gohugo.io/academic/&#34; target=&#34;_blank&#34;&gt;academic&lt;/a&gt; theme was until this workshop.
I&amp;rsquo;ll be sure to move &lt;a href=&#34;https://chendaniely.github.io/&#34; target=&#34;_blank&#34;&gt;my own website&lt;/a&gt; over to blogdown + academic one of these days.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m currently trying to find out how to save urls in a common location so they can be maintained in one place and be used in links throughout the site.
The ongoing search for how to use variables in an &lt;code&gt;md&lt;/code&gt; document (tl;dr: you can&amp;rsquo;t, but you might still be able to do what I want):
&lt;a href=&#34;https://discourse.gohugo.io/t/variables-in-markdown/7113/12&#34; target=&#34;_blank&#34;&gt;https://discourse.gohugo.io/t/variables-in-markdown/7113/12&lt;/a&gt;.
It almost seemed that &lt;a href=&#34;https://gohugo.io/variables/site/&#34; target=&#34;_blank&#34;&gt;site variables&lt;/a&gt;
were going to be the way to go, but that ended up in a dead end.&lt;/p&gt;

&lt;p&gt;What I&amp;rsquo;m most excited about is the ability to write posts in &lt;code&gt;Rmd&lt;/code&gt; and &lt;code&gt;jupyter notebooks&lt;/code&gt; for R and Python posts.&lt;/p&gt;

&lt;p&gt;Things I&amp;rsquo;ve learned the 4 days:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Each folder in content is a &amp;ldquo;section&amp;rdquo; and each &amp;ldquo;section&amp;rdquo; has a &amp;ldquo;page&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/content/home/&lt;/code&gt; contain widgets&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learnxinyminutes.com&#34; target=&#34;_blank&#34;&gt;Learn x in y minutes&lt;/a&gt; website for &lt;a href=&#34;https://learnxinyminutes.com/docs/toml/&#34; target=&#34;_blank&#34;&gt;TOML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;From Greg Wilson: Put a &lt;code&gt;LICENSE&lt;/code&gt; and &lt;code&gt;CITATION&lt;/code&gt; + &lt;a href=&#34;https://orcid.org/0000-0003-3857-1741&#34; target=&#34;_blank&#34;&gt;orcid&lt;/a&gt; on your website. Make the librarians happy.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>And we&#39;re off! RStudio internship week 1, complete.</title>
      <link>/2019/06/10/and-were-off-rstudio-internship-week-1-complete./</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/06/10/and-were-off-rstudio-internship-week-1-complete./</guid>
      <description>

&lt;p&gt;I&amp;rsquo;m still pinching myself about being one of the &lt;a href=&#34;https://blog.rstudio.com/2019/03/25/summer-interns-2019/&#34; target=&#34;_blank&#34;&gt;RStudio interns this year&lt;/a&gt;.
It&amp;rsquo;s an unbelievable opportunity and I&amp;rsquo;ve been half panicked and fighting imposter syndrome since the &lt;a href=&#34;https://blog.rstudio.com/2019/03/25/summer-interns-2019/&#34; target=&#34;_blank&#34;&gt;announcement was made in March&lt;/a&gt;.
My meeting with &lt;a href=&#34;http://third-bit.com/&#34; target=&#34;_blank&#34;&gt;Greg Wilson&lt;/a&gt; on Friday (2019-06-07) went something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Greg Wilson: How&#39;s the internship going?
Me: I&#39;m panicked, but really excited.
Greg Wilson: Good. That&#39;s how interns should feel.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;m working on the &lt;a href=&#34;https://github.com/rstudio-education/grader&#34; target=&#34;_blank&#34;&gt;grader&lt;/a&gt; package (with &lt;a href=&#34;https://twitter.com/statgarrett?lang=en&#34; target=&#34;_blank&#34;&gt;Garrett Grolemund&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/schloerke&#34; target=&#34;_blank&#34;&gt;Barret Schloerke&lt;/a&gt;) which aims to check code against a solution.
This package integrates with the &lt;a href=&#34;https://github.com/rstudio/learnr&#34; target=&#34;_blank&#34;&gt;learnr&lt;/a&gt; package, that allows an RMarkdown document to be run as an interactive tutorial (more on this after the break).&lt;/p&gt;

&lt;p&gt;My internship began with a &lt;a href=&#34;https://github.com/rstudio-education/grader/pull/10&#34; target=&#34;_blank&#34;&gt;broken pull request&lt;/a&gt; that needs to &lt;a href=&#34;https://github.com/rstudio-education/grader/pull/14&#34; target=&#34;_blank&#34;&gt;be fixed&lt;/a&gt;.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h3 id=&#34;the-learnr-grader-packages&#34;&gt;The &lt;code&gt;learnr&lt;/code&gt;/&lt;code&gt;grader&lt;/code&gt; packages&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;learnr&lt;/code&gt; allows users to write interactive tutorials/lessons (using &lt;a href=&#34;https://rmarkdown.rstudio.com/&#34; target=&#34;_blank&#34;&gt;RMarkdown&lt;/a&gt;) that give instructors to write interactive tutorials (using &lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/shiny-documents.html&#34; target=&#34;_blank&#34;&gt;shiny&lt;/a&gt;).
Learners will be able to follow the tutorial write and execute R code that will be graded.
Under the hood, &lt;code&gt;learnr&lt;/code&gt; is an &lt;a href=&#34;https://rmarkdown.rstudio.com/&#34; target=&#34;_blank&#34;&gt;RMarkdown document&lt;/a&gt; with &lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/shiny-documents.html&#34; target=&#34;_blank&#34;&gt;runtime: shiny&lt;/a&gt;.
This allows the user (e.g., instructor) to write tutorials using markdown and provide solutions using code chunks and all the magic of capturing and checking the answer with &lt;code&gt;shiny&lt;/code&gt; and &lt;code&gt;grader&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There are two main ways code can be graded.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Comparing results&lt;/li&gt;
&lt;li&gt;Comparing the provided student code with the solution code (i.e., strict checking).

&lt;ul&gt;
&lt;li&gt;One way this can be done is by looking at the &lt;a href=&#34;https://adv-r.hadley.nz/expressions.html&#34; target=&#34;_blank&#34;&gt;abstract syntax tree&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Another way would be some fancy set of string matching / regular expressions.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When I started, there were some &lt;a href=&#34;https://github.com/rstudio-education/grader/pull/10&#34; target=&#34;_blank&#34;&gt;API changes&lt;/a&gt; that were made and I&amp;rsquo;ve spent my first week going down various rabbit holes &lt;a href=&#34;https://github.com/rstudio-education/grader/pull/14&#34; target=&#34;_blank&#34;&gt;fixing tests and getting &lt;code&gt;R CMD check&lt;/code&gt; to pass&lt;/a&gt;.
Barret has been super helpful and supportive by walking me through the code base and helping me fix the broken things.
I&amp;rsquo;m pretty sure he did all the work in &lt;a href=&#34;https://github.com/rstudio-education/grader/pull/14&#34; target=&#34;_blank&#34;&gt;my PR&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;general-goals-for-the-summer&#34;&gt;General goals for the summer&lt;/h3&gt;

&lt;p&gt;This will be a moving target, but it seems like after the first week these may be good goals for the summer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A (&lt;a href=&#34;https://pkgdown.r-lib.org/&#34; target=&#34;_blank&#34;&gt;pkgdown&lt;/a&gt;) vignette for the &lt;code&gt;grader&lt;/code&gt; user API and a separate one for the developer API.&lt;/li&gt;
&lt;li&gt;Blog post of how learnr works, and what order to expect error messages (see &lt;a href=&#34;http://third-bit.com/2018/12/27/use-case-maps.html&#34; target=&#34;_blank&#34;&gt;use-case maps&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Put together a &lt;code&gt;grader&lt;/code&gt; example without the use of &lt;code&gt;learnr&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;An example would be to pass &lt;code&gt;grader&lt;/code&gt; 2 R scripts (the student code and the solution code).&lt;/li&gt;
&lt;li&gt;This came up while I was talking to Greg and he brought up &amp;ldquo;Working Effectively with Legacy Code&amp;rdquo; by Michael Feathers

&lt;ul&gt;
&lt;li&gt;This will help me find the entry points to the package, write isolated tests, and have a clearer goal of the project.&lt;/li&gt;
&lt;li&gt;Along with &lt;a href=&#34;http://third-bit.com/2018/12/27/use-case-maps.html&#34; target=&#34;_blank&#34;&gt;use-case maps&lt;/a&gt;, this will help me be a better software developer and understand what&amp;rsquo;s actually going on (did I mention I&amp;rsquo;m half panicked and fighting imposter syndrome?)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Other goals would be to have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Virtual coffee meetings with other people in the company (there&amp;rsquo;s a channel called &amp;ldquo;virtual-donut&amp;rdquo; that has a scheduler bot)&lt;/li&gt;
&lt;li&gt;See if I can draft up and hunt down the people for a PhD topic.

&lt;ul&gt;
&lt;li&gt;Greg really planted a seed in my head a few months ago about putting together materials to help &amp;ldquo;front-line health practitioners (e.g., nurse and general practitioners) use and understand data&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;I think I can&amp;hellip; I think I can&amp;hellip; I think I can&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;random-things-i-ve-learned-so-far&#34;&gt;Random things I&amp;rsquo;ve learned so far&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I think I really like this 100% remote work schedule, I&amp;rsquo;ve been up way earlier than usual finishing things before a morning meeting and then taking my time the rest of the day planning and implementing things.

&lt;ul&gt;
&lt;li&gt;I also feel like a teenager in chatrooms talking to everyone (thanks Slack!)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/15100129/using-roxygen2-template-tags/15143507#15143507&#34; target=&#34;_blank&#34;&gt;Using Templates with Roxygen2&lt;/a&gt;: allows &lt;a href=&#34;https://cran.r-project.org/web/packages/roxygen2/index.html&#34; target=&#34;_blank&#34;&gt;roxygen2&lt;/a&gt; docstrings to be reused by using a &lt;code&gt;@template&lt;/code&gt; Rd keyword&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://third-bit.com/2018/12/27/use-case-maps.html&#34; target=&#34;_blank&#34;&gt;Use-case maps&lt;/a&gt;: document and show the various components of an application,
but also show what components are used for a given action

&lt;ul&gt;
&lt;li&gt;This would be great for &lt;code&gt;learnr&lt;/code&gt; and &lt;code&gt;grader&lt;/code&gt; since I&amp;rsquo;ll pretty much be doing this for myself just to figure out all the moving parts of the system and how each component works in the full application.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jimhester/lintr&#34; target=&#34;_blank&#34;&gt;lintr&lt;/a&gt;: is a way to do static code analysis in R.

&lt;ul&gt;
&lt;li&gt;You can use this to check for (potential) errors before runtime&lt;/li&gt;
&lt;li&gt;Pretty sure I can take the same idea and apply it to &lt;code&gt;grader&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;All these years practicing my Git-fu seems to be paying off.&lt;/li&gt;
&lt;li&gt;My mentor, Garrett Grolemund, is RStudio employee number &lt;em&gt;insert number that can be represented with 1 hand&lt;/em&gt; :O&lt;/li&gt;
&lt;li&gt;There&amp;rsquo;s an &amp;ldquo;emoji-psa&amp;rdquo; channel at RStudio. It&amp;rsquo;s active. People really know their emojis. owo&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;misc&#34;&gt;Misc&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I&amp;rsquo;ve given up trying to sync the GSuite with Thunderbird and having a unified calendar.

&lt;ul&gt;
&lt;li&gt;I&amp;rsquo;m using &lt;a href=&#34;https://github.com/openWMail/openWMail&#34; target=&#34;_blank&#34;&gt;openWMail&lt;/a&gt; again for my RStudio calendar/drive.&lt;/li&gt;
&lt;li&gt;Still have all my emails in Thunderbird.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Not all the interns started on the same date. Most of us started June 3rd, but some started earlier and others will start later.

&lt;ul&gt;
&lt;li&gt;Us interns have our own slack &lt;strong&gt;workspace&lt;/strong&gt;!&lt;/li&gt;
&lt;li&gt;We had our first interns-only coffee chat on Friday.

&lt;ul&gt;
&lt;li&gt;Malcolm Barrett, Julia Blum, Joyce Cahoon, Desiree De Leon, Dewey Dunnington, and Maya Gans all met this week.&lt;/li&gt;
&lt;li&gt;We&amp;rsquo;re planning to have an intern &amp;ldquo;host&amp;rdquo; one each week so everyone gets a chance to meet some (if not all) of us.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://alison.rbind.io/&#34; target=&#34;_blank&#34;&gt;Allison Hill&lt;/a&gt; is hosing a &lt;a href=&#34;https://summer-of-blogdown.netlify.com/&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;Summer of blogdown&amp;rdquo;&lt;/a&gt; this week, so I&amp;rsquo;ll probably be doing another website update.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
